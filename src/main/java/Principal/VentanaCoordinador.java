/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Principal;

import Clases.AsignacionCoordinador;
import DAO.AsignacionCoordinadorDAO;
import static Logica.Logica.resizeColumnWidth;
import static Principal.Principal.vc;
import static Principal.VentanaLogin.nombrex;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import net.coderazzi.filters.gui.AutoChoices;
import net.coderazzi.filters.gui.TableFilterHeader;

/**
 *
 * @author sopor
 */
public class VentanaCoordinador extends javax.swing.JDialog {

    /**
     * Creates new form VentanaCoordinador
     */
    public VentanaCoordinador(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        TableFilterHeader filter = new TableFilterHeader(jTable1, AutoChoices.ENABLED);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Coordinador", "Vendedor", "Eliminar", "Cambiar"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("Menu");

        jMenuItem1.setText("Agregar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // TODO add your handling code here:
            ArrayList<AsignacionCoordinador> selectAsignacionCoordinador = AsignacionCoordinadorDAO.selectAsignacionCoordinador();

            Object[] filaTabla = new Object[4];
            DefaultTableModel modelTabla = (DefaultTableModel) jTable1.getModel();

            for (int i = 0; i < selectAsignacionCoordinador.size(); i++) {
                AsignacionCoordinador asignacionCoordinador = selectAsignacionCoordinador.get(i);
                filaTabla[0] = asignacionCoordinador.getCoordinador();
                filaTabla[1] = asignacionCoordinador.getVendedor();
                modelTabla.addRow(filaTabla);
            }

            ((DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
            resizeColumnWidth(jTable1);

            jTable1.setRowHeight(60);
            jTable1.setShowHorizontalLines(true);
            jTable1.setShowVerticalLines(true);

            DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
            int columnCount = jTable1.getColumnCount();
            for (int i = 0; i < columnCount; i++) {
                jTable1.getColumnModel().getColumn(i).setCellRenderer(renderer);
            }
            renderer.setHorizontalAlignment(JLabel.CENTER);

            jTable1.getColumn("Eliminar").setCellRenderer(new CustomRendererCoordinadorVendedor("Eliminar"));
            jTable1.getColumn("Eliminar").setCellEditor(new CustomEditorEliminarCoordinadorVendedor("Eliminar", this.jTable1));

            jTable1.getColumn("Cambiar").setCellRenderer(new CustomRendererCoordinadorVendedor("Cambiar"));
            jTable1.getColumn("Cambiar").setCellEditor(new CustomEditorEliminarCoordinadorVendedor("Cambiar", this.jTable1));

            if (nombrex.equals("ROJICD")) {
                jMenu1.setVisible(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VentanaCoordinador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        VentanaAgregarVendendorCoordinador vavc = new VentanaAgregarVendendorCoordinador(Principal.newJFrame, true);
        vavc.setLocationRelativeTo(Principal.newJFrame);
        vavc.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

class CustomRendererCoordinadorVendedor implements TableCellRenderer {

    JPanel panel;
    JButton b;

    public CustomRendererCoordinadorVendedor(String name) {
        panel = new javax.swing.JPanel();
        b = new javax.swing.JButton();
        b.setText(name);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(panel);
        panel.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        if (nombrex.equals("ROJICD")) {
            b.setEnabled(false);
        }
    }

    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        return panel;
    }
}

class CustomEditorEliminarCoordinadorVendedor extends AbstractCellEditor implements TableCellEditor, ActionListener {

    JPanel panel;
    JButton b;
    String nombre;
    JTable tabla;

    @Override
    public Object getCellEditorValue() {
        return "";
    }

    public CustomEditorEliminarCoordinadorVendedor(String nombre, JTable tabla) {
        panel = new javax.swing.JPanel();
        b = new javax.swing.JButton();
        this.nombre = nombre;
        this.tabla = tabla;

        b.setText(nombre);
        b.addActionListener(this);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(panel);
        panel.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        if (nombrex.equals("ROJICD")) {
            b.setEnabled(false);
        }
    }

    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        return panel;
    }

    public void actionPerformed(ActionEvent e) {
        stopCellEditing();

        int selectedRow = tabla.getSelectedRow();

        if (nombre.equals("Eliminar")) {
            if (JOptionPane.showConfirmDialog(Principal.newJFrame, "Quieres eliminar?", "Eliminar?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                String toString = tabla.getValueAt(selectedRow, 1).toString();
                System.out.println("toString " + toString);
                boolean eliminaCoordinadorVendedor = AsignacionCoordinadorDAO.eliminaCoordinadorVendedor(toString);

                if (eliminaCoordinadorVendedor) {
                    JOptionPane.showMessageDialog(Principal.newJFrame, "Eliminado Correctamente!");
                } else {
                    JOptionPane.showMessageDialog(null, "Ops, Algo sucedio!", "ERROR", JOptionPane.ERROR_MESSAGE);
                }

                Principal.vc.dispose();

                vc = new VentanaCoordinador(Principal.newJFrame, true);
                vc.setLocationRelativeTo(Principal.newJFrame);
                vc.setVisible(true);
            } else {

            }
        } else {
            String toString = tabla.getValueAt(selectedRow, 1).toString();

            VentanaActualizar va  = new VentanaActualizar(Principal.newJFrame, true);
            va.setLocationRelativeTo(Principal.newJFrame);

            va.jLabel2.setText(toString);

            va.setVisible(true);
        }
    }
}
